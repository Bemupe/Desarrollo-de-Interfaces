/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package pruebabmp;

import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JSlider;
import progressbarextended.ProgressBarExtended;

/**
 *
 * @author benmu
 */
public class FormularioPrincipal extends javax.swing.JFrame {

    /**
     * Creates new form FormularioPrincipal
     */
    public FormularioPrincipal() {
        initComponents();
        establecerValor(jLabel1, jSlider1, progressBarExtended1);
         setVisible(true);
        setLocationRelativeTo(null); 
       
 }


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jSlider1 = new javax.swing.JSlider();
        progressBarExtended1 = new progressbarextended.ProgressBarExtended();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setToolTipText("");

        jSlider1.setMajorTickSpacing(10);
        jSlider1.setMinorTickSpacing(5);
        jSlider1.setPaintLabels(true);
        jSlider1.setPaintTicks(true);
        jSlider1.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jSlider1StateChanged(evt);
            }
        });

        progressBarExtended1.setBackground(new java.awt.Color(204, 204, 204));
        progressBarExtended1.setColor1(new java.awt.Color(255, 51, 0));
        progressBarExtended1.setColor2(new java.awt.Color(0, 0, 204));
        progressBarExtended1.setColor3(new java.awt.Color(0, 153, 51));
        progressBarExtended1.setStringPainted(true);
        progressBarExtended1.addRangoAlcanzadoListener(new progressbarextended.ProgressBarExtended.RangoAlcanzadoListener() {
            public void capturarZona1Alcanzada(progressbarextended.ProgressBarExtended.RangoAlcanzado evt) {
                progressBarExtended1CapturarZona1Alcanzada(evt);
            }
            public void capturarZona2Alcanzada(progressbarextended.ProgressBarExtended.RangoAlcanzado evt) {
                progressBarExtended1CapturarZona2Alcanzada(evt);
            }
            public void capturarZona3Alcanzada(progressbarextended.ProgressBarExtended.RangoAlcanzado evt) {
                progressBarExtended1CapturarZona3Alcanzada(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(85, 85, 85)
                        .addComponent(jSlider1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(107, 107, 107)
                        .addComponent(progressBarExtended1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(93, 93, 93)
                        .addComponent(jLabel1)))
                .addContainerGap(115, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(59, 59, 59)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(jSlider1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(49, 49, 49)
                .addComponent(progressBarExtended1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(112, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jSlider1StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jSlider1StateChanged
        // TODO add your handling code here:
        establecerValor(jLabel1, jSlider1, progressBarExtended1);
    }//GEN-LAST:event_jSlider1StateChanged

    private void progressBarExtended1CapturarZona3Alcanzada(progressbarextended.ProgressBarExtended.RangoAlcanzado evt) {//GEN-FIRST:event_progressBarExtended1CapturarZona3Alcanzada

        //En el caso de introducir el mensaje según establecido por la zona, no
        //he conseguido emplementarlo como señala el ejercicio. Los tres eventos me aparecen en su lugar determinado,
        //pero no tienen funcionalidad. Mi solución ha sido establecer los paneles en el método "comprobarzona" del proyecto del componente.

        //JOptionPane.showMessageDialog(null,"Se ha alcanzado la zona 3","ZONA 3", JOptionPane.WARNING_MESSAGE);
    }//GEN-LAST:event_progressBarExtended1CapturarZona3Alcanzada

    private void progressBarExtended1CapturarZona2Alcanzada(progressbarextended.ProgressBarExtended.RangoAlcanzado evt) {//GEN-FIRST:event_progressBarExtended1CapturarZona2Alcanzada
        //En el caso de introducir el mensaje según establecido por la zona, no
        //he conseguido emplementarlo como señala el ejercicio. Los tres eventos me aparecen en su lugar determinado,
        //pero no tienen funcionalidad. Mi solución ha sido establecer los paneles en el método "comprobarzona" del proyecto del componente.

        //JOptionPane.showMessageDialog(null,"Se ha alcanzado la zona 2","ZONA 2", JOptionPane.WARNING_MESSAGE);
    }//GEN-LAST:event_progressBarExtended1CapturarZona2Alcanzada

    private void progressBarExtended1CapturarZona1Alcanzada(progressbarextended.ProgressBarExtended.RangoAlcanzado evt) {//GEN-FIRST:event_progressBarExtended1CapturarZona1Alcanzada
        //En el caso de introducir el mensaje según establecido por la zona, no
        //he conseguido emplementarlo como señala el ejercicio. Los tres eventos me aparecen en su lugar determinado,
        //pero no tienen funcionalidad. Mi solución ha sido establecer los paneles en el método "comprobarzona" del proyecto del componente.

        //JOptionPane.showMessageDialog(null,"Se ha alcanzado la zona 1","ZONA 1", JOptionPane.WARNING_MESSAGE);
    }//GEN-LAST:event_progressBarExtended1CapturarZona1Alcanzada

    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FormularioPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FormularioPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FormularioPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FormularioPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FormularioPrincipal().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JSlider jSlider1;
    private progressbarextended.ProgressBarExtended progressBarExtended1;
    // End of variables declaration//GEN-END:variables

    //Metodo establecerValor
    void establecerValor(JLabel label, JSlider slider, ProgressBarExtended progress){
    label.setText("El valor del slider es "+String.valueOf(slider.getValue()));
    progress.setValue(slider.getValue());
  }






}
